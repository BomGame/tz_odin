
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scripts/Diamond.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7832HtvipMvYuALRfKsNxg', 'Diamond');
// Scripts/Diamond.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onBeginContact: function onBeginContact(contact, selfCollider, otherCollider) {
    //убирание рядов
    var left = cc.director.getPhysicsManager().rayCast(cc.v2(selfCollider.node.x, selfCollider.node.y), cc.v2(selfCollider.node.x - 75, selfCollider.node.y), cc.RayCastType.All);
    var right = cc.director.getPhysicsManager().rayCast(cc.v2(selfCollider.node.x, selfCollider.node.y), cc.v2(selfCollider.node.x + 75, selfCollider.node.y), cc.RayCastType.All);

    if (left.length == 1 && right.length == 1) {
      //console.log("ttt");
      if (left[0].collider.node.color == right[0].collider.node.color && right[0].collider.node.color == selfCollider.node.color) {
        console.log("test");
      }
    }
  },
  onEndContact: function onEndContact(contact, selfCollider, otherCollider) {},
  // onLoad () {},
  start: function start() {},
  update: function update(dt) {
    //горизонт
    var left = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x - 75, this.node.y), cc.RayCastType.All);
    var right = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x + 75, this.node.y), cc.RayCastType.All);

    if (left.length == 1 && right.length == 1 && this.node._active) {
      if (left[0].collider.node.color._val == right[0].collider.node.color._val && right[0].collider.node.color._val == this.node.color._val && left[0].collider.node.name == right[0].collider.node.name && right[0].collider.node.name == this.node.name) {
        this.node.runAction(cc.moveTo(0, 900, 0));
        left[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
        right[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
      }
    } //вертикаль


    var down = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x, this.node.y - 75), cc.RayCastType.All);
    var up = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x, this.node.y + 75), cc.RayCastType.All);

    if (down.length == 1 && up.length == 1 && this.node._active) {
      if (down[0].collider.node.color._val == up[0].collider.node.color._val && up[0].collider.node.color._val == this.node.color._val && down[0].collider.node.name == up[0].collider.node.name && up[0].collider.node.name == this.node.name) {
        this.node.runAction(cc.moveTo(0, 900, 0));
        down[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
        up[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
      }
    } //диагональное падение


    var border;
    var test = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x, this.node.y - 75), cc.RayCastType.All);

    if (test.length > 0) {
      var results = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x - 75, this.node.y - 75), cc.RayCastType.All);
      border = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x - 75, this.node.y), cc.RayCastType.All);

      if (results.length == 0 && test[0].collider.node.name == "diam" && border.length == 0) {
        var x = this.node.x - 75.0;
        var y = this.node.y - 75.0;
        this.node.x = x;
        this.node.y = y;
      }

      var results = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x + 75, this.node.y - 75), cc.RayCastType.All);
      border = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x + 75, this.node.y), cc.RayCastType.All);

      if (results.length == 0 && test[0].collider.node.name == "diam" && border.length == 0) {
        var x = this.node.x + 75.0;
        var y = this.node.y - 75.0;
        this.node.x = x;
        this.node.y = y;
      }
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0c1xcRGlhbW9uZC5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIm9uQmVnaW5Db250YWN0IiwiY29udGFjdCIsInNlbGZDb2xsaWRlciIsIm90aGVyQ29sbGlkZXIiLCJsZWZ0IiwiZGlyZWN0b3IiLCJnZXRQaHlzaWNzTWFuYWdlciIsInJheUNhc3QiLCJ2MiIsIm5vZGUiLCJ4IiwieSIsIlJheUNhc3RUeXBlIiwiQWxsIiwicmlnaHQiLCJsZW5ndGgiLCJjb2xsaWRlciIsImNvbG9yIiwiY29uc29sZSIsImxvZyIsIm9uRW5kQ29udGFjdCIsInN0YXJ0IiwidXBkYXRlIiwiZHQiLCJfYWN0aXZlIiwiX3ZhbCIsIm5hbWUiLCJydW5BY3Rpb24iLCJtb3ZlVG8iLCJkb3duIiwidXAiLCJib3JkZXIiLCJ0ZXN0IiwicmVzdWx0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFLEVBSFA7QUFNTDtBQUVBQyxFQUFBQSxjQUFjLEVBQUUsd0JBQVVDLE9BQVYsRUFBbUJDLFlBQW5CLEVBQWlDQyxhQUFqQyxFQUFnRDtBQUM1RDtBQUNBLFFBQUlDLElBQUksR0FBQ1IsRUFBRSxDQUFDUyxRQUFILENBQVlDLGlCQUFaLEdBQWdDQyxPQUFoQyxDQUF3Q1gsRUFBRSxDQUFDWSxFQUFILENBQU1OLFlBQVksQ0FBQ08sSUFBYixDQUFrQkMsQ0FBeEIsRUFBMkJSLFlBQVksQ0FBQ08sSUFBYixDQUFrQkUsQ0FBN0MsQ0FBeEMsRUFBeUZmLEVBQUUsQ0FBQ1ksRUFBSCxDQUFNTixZQUFZLENBQUNPLElBQWIsQ0FBa0JDLENBQWxCLEdBQW9CLEVBQTFCLEVBQThCUixZQUFZLENBQUNPLElBQWIsQ0FBa0JFLENBQWhELENBQXpGLEVBQTRJZixFQUFFLENBQUNn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Um9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgfSxcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICBvbkJlZ2luQ29udGFjdDogZnVuY3Rpb24gKGNvbnRhY3QsIHNlbGZDb2xsaWRlciwgb3RoZXJDb2xsaWRlcikge1xyXG4gICAgICAgIC8v0YPQsdC40YDQsNC90LjQtSDRgNGP0LTQvtCyXHJcbiAgICAgICAgdmFyIGxlZnQ9Y2MuZGlyZWN0b3IuZ2V0UGh5c2ljc01hbmFnZXIoKS5yYXlDYXN0KGNjLnYyKHNlbGZDb2xsaWRlci5ub2RlLngsIHNlbGZDb2xsaWRlci5ub2RlLnkpLCBjYy52MihzZWxmQ29sbGlkZXIubm9kZS54LTc1LCBzZWxmQ29sbGlkZXIubm9kZS55KSxjYy5SYXlDYXN0VHlwZS5BbGwpO1xyXG4gICAgICAgIHZhciByaWdodD1jYy5kaXJlY3Rvci5nZXRQaHlzaWNzTWFuYWdlcigpLnJheUNhc3QoY2MudjIoc2VsZkNvbGxpZGVyLm5vZGUueCwgc2VsZkNvbGxpZGVyLm5vZGUueSksIGNjLnYyKHNlbGZDb2xsaWRlci5ub2RlLngrNzUsIHNlbGZDb2xsaWRlci5ub2RlLnkpLGNjLlJheUNhc3RUeXBlLkFsbCk7XHJcbiAgICAgICAgaWYobGVmdC5sZW5ndGg9PTEmJnJpZ2h0Lmxlbmd0aD09MSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJ0dHRcIik7XHJcbiAgICAgICAgICAgIGlmKGxlZnRbMF0uY29sbGlkZXIubm9kZS5jb2xvcj09cmlnaHRbMF0uY29sbGlkZXIubm9kZS5jb2xvciYmcmlnaHRbMF0uY29sbGlkZXIubm9kZS5jb2xvcj09c2VsZkNvbGxpZGVyLm5vZGUuY29sb3IpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidGVzdFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgb25FbmRDb250YWN0IChjb250YWN0LCBzZWxmQ29sbGlkZXIsIG90aGVyQ29sbGlkZXIpXHJcbiAgICB7XHJcbiAgICB9LFxyXG5cclxuICAgIC8vIG9uTG9hZCAoKSB7fSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZSAoZHQpIHtcclxuICAgICAgICAvL9Cz0L7RgNC40LfQvtC90YJcclxuICAgICAgICB2YXIgbGVmdD1jYy5kaXJlY3Rvci5nZXRQaHlzaWNzTWFuYWdlcigpLnJheUNhc3QoY2MudjIodGhpcy5ub2RlLngsIHRoaXMubm9kZS55KSwgY2MudjIodGhpcy5ub2RlLngtNzUsIHRoaXMubm9kZS55KSxjYy5SYXlDYXN0VHlwZS5BbGwpO1xyXG4gICAgICAgIHZhciByaWdodD1jYy5kaXJlY3Rvci5nZXRQaHlzaWNzTWFuYWdlcigpLnJheUNhc3QoY2MudjIodGhpcy5ub2RlLngsIHRoaXMubm9kZS55KSwgY2MudjIodGhpcy5ub2RlLngrNzUsIHRoaXMubm9kZS55KSxjYy5SYXlDYXN0VHlwZS5BbGwpO1xyXG4gICAgICAgIGlmKGxlZnQubGVuZ3RoPT0xJiZyaWdodC5sZW5ndGg9PTEmJnRoaXMubm9kZS5fYWN0aXZlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYobGVmdFswXS5jb2xsaWRlci5ub2RlLmNvbG9yLl92YWw9PXJpZ2h0WzBdLmNvbGxpZGVyLm5vZGUuY29sb3IuX3ZhbCYmcmlnaHRbMF0uY29sbGlkZXIubm9kZS5jb2xvci5fdmFsPT10aGlzLm5vZGUuY29sb3IuX3ZhbCYmbGVmdFswXS5jb2xsaWRlci5ub2RlLm5hbWU9PXJpZ2h0WzBdLmNvbGxpZGVyLm5vZGUubmFtZSYmcmlnaHRbMF0uY29sbGlkZXIubm9kZS5uYW1lPT10aGlzLm5vZGUubmFtZSlcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5tb3ZlVG8oMCw5MDAsMCkpO1xyXG4gICAgICAgICAgICAgICAgbGVmdFswXS5jb2xsaWRlci5ub2RlLnJ1bkFjdGlvbihjYy5tb3ZlVG8oMCw5MDAsMCkpOztcclxuICAgICAgICAgICAgICAgIHJpZ2h0WzBdLmNvbGxpZGVyLm5vZGUucnVuQWN0aW9uKGNjLm1vdmVUbygwLDkwMCwwKSk7O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL9Cy0LXRgNGC0LjQutCw0LvRjFxyXG4gICAgICAgIHZhciBkb3duPWNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkucmF5Q2FzdChjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnkpLCBjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnktNzUpLGNjLlJheUNhc3RUeXBlLkFsbCk7XHJcbiAgICAgICAgdmFyIHVwPWNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkucmF5Q2FzdChjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnkpLCBjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnkrNzUpLGNjLlJheUNhc3RUeXBlLkFsbCk7XHJcbiAgICAgICAgaWYoZG93bi5sZW5ndGg9PTEmJnVwLmxlbmd0aD09MSYmdGhpcy5ub2RlLl9hY3RpdmUpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZihkb3duWzBdLmNvbGxpZGVyLm5vZGUuY29sb3IuX3ZhbD09dXBbMF0uY29sbGlkZXIubm9kZS5jb2xvci5fdmFsJiZ1cFswXS5jb2xsaWRlci5ub2RlLmNvbG9yLl92YWw9PXRoaXMubm9kZS5jb2xvci5fdmFsJiZkb3duWzBdLmNvbGxpZGVyLm5vZGUubmFtZT09dXBbMF0uY29sbGlkZXIubm9kZS5uYW1lJiZ1cFswXS5jb2xsaWRlci5ub2RlLm5hbWU9PXRoaXMubm9kZS5uYW1lKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLm1vdmVUbygwLDkwMCwwKSk7XHJcbiAgICAgICAgICAgICAgICBkb3duWzBdLmNvbGxpZGVyLm5vZGUucnVuQWN0aW9uKGNjLm1vdmVUbygwLDkwMCwwKSk7O1xyXG4gICAgICAgICAgICAgICAgdXBbMF0uY29sbGlkZXIubm9kZS5ydW5BY3Rpb24oY2MubW92ZVRvKDAsOTAwLDApKTs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v0LTQuNCw0LPQvtC90LDQu9GM0L3QvtC1INC/0LDQtNC10L3QuNC1XHJcbiAgICAgICAgdmFyIGJvcmRlcjtcclxuICAgICAgICB2YXIgdGVzdD1jYy5kaXJlY3Rvci5nZXRQaHlzaWNzTWFuYWdlcigpLnJheUNhc3QoY2MudjIodGhpcy5ub2RlLngsIHRoaXMubm9kZS55KSxjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnktNzUpLGNjLlJheUNhc3RUeXBlLkFsbCk7XHJcbiAgICAgICAgaWYodGVzdC5sZW5ndGg+MClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhciByZXN1bHRzPWNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkucmF5Q2FzdChjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnkpLGNjLnYyKHRoaXMubm9kZS54LTc1LCB0aGlzLm5vZGUueS03NSksY2MuUmF5Q2FzdFR5cGUuQWxsKTtcclxuICAgICAgICAgICAgYm9yZGVyPWNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkucmF5Q2FzdChjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnkpLGNjLnYyKHRoaXMubm9kZS54LTc1LCB0aGlzLm5vZGUueSksY2MuUmF5Q2FzdFR5cGUuQWxsKTtcclxuICAgICAgICAgICAgaWYocmVzdWx0cy5sZW5ndGg9PTAgJiYgdGVzdFswXS5jb2xsaWRlci5ub2RlLm5hbWU9PVwiZGlhbVwiICYmIGJvcmRlci5sZW5ndGg9PTApXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHZhciB4ID0gdGhpcy5ub2RlLngtNzUuMDtcclxuICAgICAgICAgICAgICAgIHZhciB5ID0gdGhpcy5ub2RlLnktNzUuMDtcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZS54PXg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUueT15O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIHZhciByZXN1bHRzPWNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkucmF5Q2FzdChjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnkpLGNjLnYyKHRoaXMubm9kZS54Kzc1LCB0aGlzLm5vZGUueS03NSksY2MuUmF5Q2FzdFR5cGUuQWxsKTtcclxuICAgICAgICAgICAgYm9yZGVyPWNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkucmF5Q2FzdChjYy52Mih0aGlzLm5vZGUueCwgdGhpcy5ub2RlLnkpLGNjLnYyKHRoaXMubm9kZS54Kzc1LCB0aGlzLm5vZGUueSksY2MuUmF5Q2FzdFR5cGUuQWxsKTtcclxuICAgICAgICAgICAgaWYocmVzdWx0cy5sZW5ndGg9PTAgJiYgdGVzdFswXS5jb2xsaWRlci5ub2RlLm5hbWU9PVwiZGlhbVwiICYmIGJvcmRlci5sZW5ndGg9PTApXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHZhciB4ID0gdGhpcy5ub2RlLngrNzUuMDtcclxuICAgICAgICAgICAgICAgIHZhciB5ID0gdGhpcy5ub2RlLnktNzUuMDtcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZS54PXg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUueT15O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxufSk7XHJcbiJdfQ==