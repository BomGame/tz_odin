
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/Scripts/Destroy');
require('./assets/Scripts/Diamond');
require('./assets/Scripts/Game');
require('./assets/Scripts/PoleScript');
require('./assets/Scripts/SpawnScript');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scripts/Game.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8d14326kORFYo697ZKQPTcG', 'Game');
// Scripts/Game.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    mass: cc.Node
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    cc.director.getPhysicsManager().enabled = true;
    this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
    mass = null;
  },
  onTouchStart: function onTouchStart(event) {
    var touchLoc = event.touch.getLocation();
    var ray = cc.director.getPhysicsManager().rayCast(cc.v2(touchLoc.x - 35, touchLoc.y), cc.v2(touchLoc.x + 35, touchLoc.y), cc.RayCastType.All);

    if (ray[0] != null && mass == null && ray[0].collider.node.name == "diam") {
      mass = ray[0];
      return;
    }

    if (mass != null && ray[0] != null && ray[0].collider.node.name == "diam") {
      console.log(mass.collider.node.x - ray[0].collider.node.x + " " + mass.collider.node.y - ray[0].collider.node.y);

      if (Math.abs(mass.collider.node.x - ray[0].collider.node.x) <= 75 && Math.abs(mass.collider.node.y - ray[0].collider.node.y) <= 75) {
        var temp = mass.collider.node.color;
        mass.collider.node.color = ray[0].collider.node.color;
        ray[0].collider.node.color = temp;
        mass = null;
        ray = null;
      }
    }
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0c1xcR2FtZS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIm1hc3MiLCJOb2RlIiwib25Mb2FkIiwiZGlyZWN0b3IiLCJnZXRQaHlzaWNzTWFuYWdlciIsImVuYWJsZWQiLCJub2RlIiwib24iLCJFdmVudFR5cGUiLCJUT1VDSF9TVEFSVCIsIm9uVG91Y2hTdGFydCIsImV2ZW50IiwidG91Y2hMb2MiLCJ0b3VjaCIsImdldExvY2F0aW9uIiwicmF5IiwicmF5Q2FzdCIsInYyIiwieCIsInkiLCJSYXlDYXN0VHlwZSIsIkFsbCIsImNvbGxpZGVyIiwibmFtZSIsImNvbnNvbGUiLCJsb2ciLCJNYXRoIiwiYWJzIiwidGVtcCIsImNvbG9yIiwic3RhcnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxJQUFJLEVBQUVKLEVBQUUsQ0FBQ0s7QUFERCxHQUhQO0FBT0w7QUFFQUMsRUFBQUEsTUFUSyxvQkFTSztBQUNOTixJQUFBQSxFQUFFLENBQUNPLFFBQUgsQ0FBWUMsaUJBQVosR0FBZ0NDLE9BQWhDLEdBQTBDLElBQTFDO0FBQ0EsU0FBS0MsSUFBTCxDQUFVQyxFQUFWLENBQWFYLEVBQUUsQ0FBQ0ssSUFBSCxDQUFRTyxTQUFSLENBQWtCQyxXQUEvQixFQUE0QyxLQUFLQyxZQUFqRCxFQUErRCxJQUEvRDtBQUNBVixJQUFBQSxJQUFJLEdBQUMsSUFBTDtBQUNILEdBYkk7QUFlTFUsRUFBQUEsWUFmSyx3QkFlU0MsS0FmVCxFQWVnQjtBQUNqQixRQUFJQyxRQUFRLEdBQUdELEtBQUssQ0FBQ0UsS0FBTixDQUFZQyxXQUFaLEVBQWY7QUFDQSxRQUFJQyxHQUFHLEdBQUNuQixFQUFFLENBQUNPLFFBQUgsQ0FBWUMsaUJBQVosR0FBZ0NZLE9BQWhDLENBQXdDcEIsRUFBRSxDQUFDcUIsRUFBSCxDQUFNTCxRQUFRLENBQUNNLENBQVQsR0FBVyxFQUFqQixFQUFxQk4sUUFBUSxDQUFDTyxDQUE5QixDQUF4QyxFQUEwRXZCLEVBQUUsQ0FBQ3FCLEVBQUgsQ0FBTUwsUUFBUSxDQUFDTSxDQUFULEdBQVcsRUFBakIsRUFBcUJOLFFBQVEsQ0FBQ08sQ0FBOUIsQ0FBMUUsRUFBMkd2QixFQUFFLENBQUN3QixXQUFILENBQWVDLEdBQTFILENBQVI7O0FBRUEsUUFBR04sR0FBRyxDQUFDLENBQUQsQ0FBSCxJQUFRLElBQVIsSUFBY2YsSUFBSSxJQUFFLElBQXBCLElBQTBCZSxHQUFHLENBQUMsQ0FBRCxDQUFILENBQU9PLFFBQVAsQ0FBZ0JoQixJQUFoQixDQUFxQmlCLElBQXJCLElBQTJCLE1BQXhELEVBQ0E7QUFDSXZCLE1BQUFBLElBQUksR0FBQ2UsR0FBRyxDQUFDLENBQUQsQ0FBUjtBQUNBO0FBQ0g7O0FBQ0QsUUFBR2YsSUFBSSxJQUFFLElBQU4sSUFBWWUsR0FBRyxDQUFDLENBQUQsQ0FBSCxJQUFRLElBQXBCLElBQTBCQSxHQUFHLENBQUMsQ0FBRCxDQUFILENBQU9PLFFBQVAsQ0FBZ0JoQixJQUFoQixDQUFxQmlCLElBQXJCLElBQTJCLE1BQXhELEVBQ0E7QUFDSUMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVl6QixJQUFJLENBQUNzQixRQUFMLENBQWNoQixJQUFkLENBQW1CWSxDQUFuQixHQUFxQkgsR0FBRyxDQUFDLENBQUQsQ0FBSCxDQUFPTyxRQUFQLENBQWdCaEIsSUFBaEIsQ0FBcUJZLENBQTFDLEdBQTRDLEdBQTVDLEdBQWdEbEIsSUFBSSxDQUFDc0IsUUFBTCxDQUFjaEIsSUFBZCxDQUFtQmEsQ0FBbkUsR0FBcUVKLEdBQUcsQ0FBQyxDQUFELENBQUgsQ0FBT08sUUFBUCxDQUFnQmhCLElBQWhCLENBQXFCYSxDQUF0Rzs7QUFDQSxVQUFHTyxJQUFJLENBQUNDLEdBQUwsQ0FBUzNCLElBQUksQ0FBQ3NCLFFBQUwsQ0FBY2hCLElBQWQsQ0FBbUJZLENBQW5CLEdBQXFCSCxHQUFHLENBQUMsQ0FBRCxDQUFILENBQU9PLFFBQVAsQ0FBZ0JoQixJQUFoQixDQUFxQlksQ0FBbkQsS0FBdUQsRUFBdkQsSUFBNkRRLElBQUksQ0FBQ0MsR0FBTCxDQUFTM0IsSUFBSSxDQUFDc0IsUUFBTCxDQUFjaEIsSUFBZCxDQUFtQmEsQ0FBbkIsR0FBcUJKLEdBQUcsQ0FBQyxDQUFELENBQUgsQ0FBT08sUUFBUCxDQUFnQmhCLElBQWhCLENBQXFCYSxDQUFuRCxLQUF1RCxFQUF2SCxFQUNBO0FBQ0EsWUFBSVMsSUFBSSxHQUFDNUIsSUFBSSxDQUFDc0IsUUFBTCxDQUFjaEIsSUFBZCxDQUFtQnVCLEtBQTVCO0FBQ0E3QixRQUFBQSxJQUFJLENBQUNzQixRQUFMLENBQWNoQixJQUFkLENBQW1CdUIsS0FBbkIsR0FBeUJkLEdBQUcsQ0FBQyxDQUFELENBQUgsQ0FBT08sUUFBUCxDQUFnQmhCLElBQWhCLENBQXFCdUIsS0FBOUM7QUFDQWQsUUFBQUEsR0FBRyxDQUFDLENBQUQsQ0FBSCxDQUFPTyxRQUFQLENBQWdCaEIsSUFBaEIsQ0FBcUJ1QixLQUFyQixHQUEyQkQsSUFBM0I7QUFDQTVCLFFBQUFBLElBQUksR0FBQyxJQUFMO0FBQ0FlLFFBQUFBLEdBQUcsR0FBQyxJQUFKO0FBQ0M7QUFDSjtBQUNKLEdBcENJO0FBc0NMZSxFQUFBQSxLQXRDSyxtQkFzQ0ksQ0FFUixDQXhDSSxDQTBDTDs7QUExQ0ssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBtYXNzOiBjYy5Ob2RlLFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIGNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkuZW5hYmxlZCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX1NUQVJULCB0aGlzLm9uVG91Y2hTdGFydCwgdGhpcyk7XHJcbiAgICAgICAgbWFzcz1udWxsO1xyXG4gICAgfSxcclxuXHJcbiAgICBvblRvdWNoU3RhcnQgKGV2ZW50KSB7XHJcbiAgICAgICAgbGV0IHRvdWNoTG9jID0gZXZlbnQudG91Y2guZ2V0TG9jYXRpb24oKTtcclxuICAgICAgICB2YXIgcmF5PWNjLmRpcmVjdG9yLmdldFBoeXNpY3NNYW5hZ2VyKCkucmF5Q2FzdChjYy52Mih0b3VjaExvYy54LTM1LCB0b3VjaExvYy55KSwgY2MudjIodG91Y2hMb2MueCszNSwgdG91Y2hMb2MueSksY2MuUmF5Q2FzdFR5cGUuQWxsKTtcclxuXHJcbiAgICAgICAgaWYocmF5WzBdIT1udWxsJiZtYXNzPT1udWxsJiZyYXlbMF0uY29sbGlkZXIubm9kZS5uYW1lPT1cImRpYW1cIilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG1hc3M9cmF5WzBdO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKG1hc3MhPW51bGwmJnJheVswXSE9bnVsbCYmcmF5WzBdLmNvbGxpZGVyLm5vZGUubmFtZT09XCJkaWFtXCIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhtYXNzLmNvbGxpZGVyLm5vZGUueC1yYXlbMF0uY29sbGlkZXIubm9kZS54K1wiIFwiK21hc3MuY29sbGlkZXIubm9kZS55LXJheVswXS5jb2xsaWRlci5ub2RlLnkpO1xyXG4gICAgICAgICAgICBpZihNYXRoLmFicyhtYXNzLmNvbGxpZGVyLm5vZGUueC1yYXlbMF0uY29sbGlkZXIubm9kZS54KTw9NzUgJiYgTWF0aC5hYnMobWFzcy5jb2xsaWRlci5ub2RlLnktcmF5WzBdLmNvbGxpZGVyLm5vZGUueSk8PTc1KVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhciB0ZW1wPW1hc3MuY29sbGlkZXIubm9kZS5jb2xvcjtcclxuICAgICAgICAgICAgbWFzcy5jb2xsaWRlci5ub2RlLmNvbG9yPXJheVswXS5jb2xsaWRlci5ub2RlLmNvbG9yO1xyXG4gICAgICAgICAgICByYXlbMF0uY29sbGlkZXIubm9kZS5jb2xvcj10ZW1wO1xyXG4gICAgICAgICAgICBtYXNzPW51bGw7XHJcbiAgICAgICAgICAgIHJheT1udWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcblxyXG4gICAgfSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scripts/SpawnScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2fca2I4fTFBNpG9os7aFiI3', 'SpawnScript');
// Scripts/SpawnScript.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    diamond: {
      "default": null,
      type: cc.Prefab
    },
    isSpawn: boolean = true
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    cc.director.getCollisionManager().enabled = true;
    isSpawn = true;
  },
  onBeginContact: function onBeginContact(contact, selfCollider, otherCollider) {
    isSpawn = false; //otherCollider.body.linearVelocity=cc.v2(0,-30);
  },
  onEndContact: function onEndContact(contact, selfCollider, otherCollider) {
    var results = cc.director.getPhysicsManager().rayCast(cc.v2(selfCollider.node.x, selfCollider.node.y - 40), cc.v2(selfCollider.node.x, selfCollider.node.y + 40), cc.RayCastType.All);

    if (results.length == 1) {
      var scene = cc.director.getScene();
      var Diamond = cc.instantiate(this.diamond);
      Diamond.parent = scene;
      Diamond.setPosition(selfCollider.node.x, selfCollider.node.y);
      Diamond.name = 'diam';
      var color = Math.floor(Math.random() * 5);

      switch (color) {
        case 0:
          Diamond.color = cc.Color.CYAN;
          break;

        case 1:
          Diamond.color = cc.Color.RED;
          break;

        case 2:
          Diamond.color = cc.Color.ORANGE;
          break;

        case 3:
          Diamond.color = cc.Color.GREEN;
          break;

        case 4:
          Diamond.color = cc.Color.WHITE;
          break;
      }
    }
  },
  start: function start() {},
  update: function update(dt) {
    if (isSpawn) {
      var scene = cc.director.getScene();
      var Diamond = cc.instantiate(this.diamond);
      Diamond.parent = scene;
      var node = this.node;
      Diamond.setPosition(node.x, node.y);
      Diamond.name = 'diam';
      var color = Math.floor(Math.random() * 5);

      switch (color) {
        case 0:
          Diamond.color = cc.Color.CYAN;
          break;

        case 1:
          Diamond.color = cc.Color.RED;
          break;

        case 2:
          Diamond.color = cc.Color.ORANGE;
          break;

        case 3:
          Diamond.color = cc.Color.GREEN;
          break;

        case 4:
          Diamond.color = cc.Color.WHITE;
          break;
      }
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scripts/Diamond.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7832HtvipMvYuALRfKsNxg', 'Diamond');
// Scripts/Diamond.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onBeginContact: function onBeginContact(contact, selfCollider, otherCollider) {
    //убирание рядов
    var left = cc.director.getPhysicsManager().rayCast(cc.v2(selfCollider.node.x, selfCollider.node.y), cc.v2(selfCollider.node.x - 75, selfCollider.node.y), cc.RayCastType.All);
    var right = cc.director.getPhysicsManager().rayCast(cc.v2(selfCollider.node.x, selfCollider.node.y), cc.v2(selfCollider.node.x + 75, selfCollider.node.y), cc.RayCastType.All);

    if (left.length == 1 && right.length == 1) {
      //console.log("ttt");
      if (left[0].collider.node.color == right[0].collider.node.color && right[0].collider.node.color == selfCollider.node.color) {
        console.log("test");
      }
    }
  },
  onEndContact: function onEndContact(contact, selfCollider, otherCollider) {},
  // onLoad () {},
  start: function start() {},
  update: function update(dt) {
    //горизонт
    var left = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x - 75, this.node.y), cc.RayCastType.All);
    var right = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x + 75, this.node.y), cc.RayCastType.All);

    if (left.length == 1 && right.length == 1 && this.node._active) {
      if (left[0].collider.node.color._val == right[0].collider.node.color._val && right[0].collider.node.color._val == this.node.color._val && left[0].collider.node.name == right[0].collider.node.name && right[0].collider.node.name == this.node.name) {
        this.node.runAction(cc.moveTo(0, 900, 0));
        left[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
        right[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
      }
    } //вертикаль


    var down = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x, this.node.y - 75), cc.RayCastType.All);
    var up = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x, this.node.y + 75), cc.RayCastType.All);

    if (down.length == 1 && up.length == 1 && this.node._active) {
      if (down[0].collider.node.color._val == up[0].collider.node.color._val && up[0].collider.node.color._val == this.node.color._val && down[0].collider.node.name == up[0].collider.node.name && up[0].collider.node.name == this.node.name) {
        this.node.runAction(cc.moveTo(0, 900, 0));
        down[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
        up[0].collider.node.runAction(cc.moveTo(0, 900, 0));
        ;
      }
    } //диагональное падение


    var border;
    var test = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x, this.node.y - 75), cc.RayCastType.All);

    if (test.length > 0) {
      var results = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x - 75, this.node.y - 75), cc.RayCastType.All);
      border = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x - 75, this.node.y), cc.RayCastType.All);

      if (results.length == 0 && test[0].collider.node.name == "diam" && border.length == 0) {
        var x = this.node.x - 75.0;
        var y = this.node.y - 75.0;
        this.node.x = x;
        this.node.y = y;
      }

      var results = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x + 75, this.node.y - 75), cc.RayCastType.All);
      border = cc.director.getPhysicsManager().rayCast(cc.v2(this.node.x, this.node.y), cc.v2(this.node.x + 75, this.node.y), cc.RayCastType.All);

      if (results.length == 0 && test[0].collider.node.name == "diam" && border.length == 0) {
        var x = this.node.x + 75.0;
        var y = this.node.y - 75.0;
        this.node.x = x;
        this.node.y = y;
      }
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scripts/PoleScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f85f90fl75KQo8d3iqv8iOI', 'PoleScript');
// Scripts/PoleScript.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    block: {
      "default": null,
      type: cc.Prefab
    },
    colis: {
      "default": null,
      type: cc.Prefab
    },
    spawn: {
      "default": null,
      type: cc.Prefab
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    var pole = [[]];
    pole = [['b', 's', 's', 's', 's', 's', 's', 's', 's', 's', 's'], ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'], ['-', '-', 'b', '-', '-', '-', '-', '-', '-', '-', '-'], ['-', 'b', 'b', '-', '-', '-', '-', '-', '-', '-', '-'], ['-', '-', 'b', '-', 'b', '-', '-', '-', '-', '-', '-'], ['-', '-', '-', '-', '-', 'b', '-', '-', '-', '-', '-'], ['-', '-', '-', '-', '-', '-', 'b', '-', '-', '-', '-'], ['-', '-', '-', '-', '-', '-', '-', 'b', '-', '-', '-'], ['-', '-', '-', '-', '-', '-', '-', '-', 'b', '-', '-']];

    for (var i = 0; i < 11; i++) {
      for (var j = 0; j < 9; j++) {
        if (pole[j][i] == '-') {
          var scene = cc.director.getScene();
          var Block = cc.instantiate(this.block);
          Block.parent = scene;
          Block.setPosition(45 + 75 * i, 720 - 75 * j);
        } else if (pole[j][i] == 'b') {
          var scene = cc.director.getScene();
          var Colis = cc.instantiate(this.colis);
          Colis.parent = scene;
          Colis.setPosition(45 + 75 * i, 720 - 75 * j);
        } else if (pole[j][i] == 's') {
          var scene = cc.director.getScene();
          var Spawn = cc.instantiate(this.spawn);
          Spawn.parent = scene;
          Spawn.setPosition(45 + 75 * i, 720 - 75 * j);
        }
      }
    }
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0c1xcUG9sZVNjcmlwdC5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImJsb2NrIiwidHlwZSIsIlByZWZhYiIsImNvbGlzIiwic3Bhd24iLCJvbkxvYWQiLCJwb2xlIiwiaSIsImoiLCJzY2VuZSIsImRpcmVjdG9yIiwiZ2V0U2NlbmUiLCJCbG9jayIsImluc3RhbnRpYXRlIiwicGFyZW50Iiwic2V0UG9zaXRpb24iLCJDb2xpcyIsIlNwYXduIiwic3RhcnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxLQUFLLEVBQUU7QUFDSCxpQkFBUyxJQUROO0FBRUhDLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZOLEtBREM7QUFLUkMsSUFBQUEsS0FBSyxFQUFFO0FBQ0gsaUJBQVMsSUFETjtBQUVIRixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGTixLQUxDO0FBU1JFLElBQUFBLEtBQUssRUFBRTtBQUNILGlCQUFTLElBRE47QUFFSEgsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRk47QUFUQyxHQUhQO0FBbUJMO0FBRUFHLEVBQUFBLE1BckJLLG9CQXFCSztBQUNOLFFBQUlDLElBQUksR0FBRyxDQUFDLEVBQUQsQ0FBWDtBQUNBQSxJQUFBQSxJQUFJLEdBQUcsQ0FDSCxDQUFDLEdBQUQsRUFBSyxHQUFMLEVBQVMsR0FBVCxFQUFhLEdBQWIsRUFBaUIsR0FBakIsRUFBcUIsR0FBckIsRUFBeUIsR0FBekIsRUFBNkIsR0FBN0IsRUFBaUMsR0FBakMsRUFBcUMsR0FBckMsRUFBeUMsR0FBekMsQ0FERyxFQUVILENBQUMsR0FBRCxFQUFLLEdBQUwsRUFBUyxHQUFULEVBQWEsR0FBYixFQUFpQixH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SixDQUFRRCxDQUFSLEtBQVksR0FBZixFQUNMO0FBQ0ksY0FBSUUsS0FBSyxHQUFHYixFQUFFLENBQUNjLFFBQUgsQ0FBWUMsUUFBWixFQUFaO0FBQ0EsY0FBSU0sS0FBSyxHQUFDckIsRUFBRSxDQUFDaUIsV0FBSCxDQUFlLEtBQUtULEtBQXBCLENBQVY7QUFDQWEsVUFBQUEsS0FBSyxDQUFDSCxNQUFOLEdBQWVMLEtBQWY7QUFDQVEsVUFBQUEsS0FBSyxDQUFDRixXQUFOLENBQWtCLEtBQUcsS0FBR1IsQ0FBeEIsRUFBMkIsTUFBSSxLQUFHQyxDQUFsQztBQUNIO0FBQ0o7QUFDSjtBQUNKLEdBOURJO0FBZ0VMVSxFQUFBQSxLQWhFSyxtQkFnRUksQ0FFUixDQWxFSSxDQW9FTDs7QUFwRUssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBibG9jazoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5QcmVmYWIsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIGNvbGlzOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLlByZWZhYixcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNwYXduOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLlByZWZhYixcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgbGV0IHBvbGUgPSBbW11dO1xyXG4gICAgICAgIHBvbGUgPSBbXHJcbiAgICAgICAgICAgIFsnYicsJ3MnLCdzJywncycsJ3MnLCdzJywncycsJ3MnLCdzJywncycsJ3MnXSxcclxuICAgICAgICAgICAgWyctJywnLScsJy0nLCctJywnLScsJy0nLCctJywnLScsJy0nLCctJywnLSddLFxyXG4gICAgICAgICAgICBbJy0nLCctJywnYicsJy0nLCctJywnLScsJy0nLCctJywnLScsJy0nLCctJ10sXHJcbiAgICAgICAgICAgIFsnLScsJ2InLCdiJywnLScsJy0nLCctJywnLScsJy0nLCctJywnLScsJy0nXSxcclxuICAgICAgICAgICAgWyctJywnLScsJ2InLCctJywnYicsJy0nLCctJywnLScsJy0nLCctJywnLSddLFxyXG4gICAgICAgICAgICBbJy0nLCctJywnLScsJy0nLCctJywnYicsJy0nLCctJywnLScsJy0nLCctJ10sXHJcbiAgICAgICAgICAgIFsnLScsJy0nLCctJywnLScsJy0nLCctJywnYicsJy0nLCctJywnLScsJy0nXSxcclxuICAgICAgICAgICAgWyctJywnLScsJy0nLCctJywnLScsJy0nLCctJywnYicsJy0nLCctJywnLSddLFxyXG4gICAgICAgICAgICBbJy0nLCctJywnLScsJy0nLCctJywnLScsJy0nLCctJywnYicsJy0nLCctJ10sXHJcbiAgICAgICAgXVxyXG5cclxuICAgICAgICBmb3IobGV0IGk9MDsgaTwxMTsgaSsrKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZm9yKGxldCBqPTA7IGo8OTsgaisrKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBpZihwb2xlW2pdW2ldPT0nLScpXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjZW5lID0gY2MuZGlyZWN0b3IuZ2V0U2NlbmUoKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgQmxvY2sgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmJsb2NrKTtcclxuICAgICAgICAgICAgICAgICAgICBCbG9jay5wYXJlbnQgPSBzY2VuZTtcclxuICAgICAgICAgICAgICAgICAgICBCbG9jay5zZXRQb3NpdGlvbig0NSs3NSppLCA3MjAtNzUqaik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmKHBvbGVbal1baV09PSdiJylcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2NlbmUgPSBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBDb2xpcz1jYy5pbnN0YW50aWF0ZSh0aGlzLmNvbGlzKTtcclxuICAgICAgICAgICAgICAgICAgICBDb2xpcy5wYXJlbnQgPSBzY2VuZTtcclxuICAgICAgICAgICAgICAgICAgICBDb2xpcy5zZXRQb3NpdGlvbig0NSs3NSppLCA3MjAtNzUqaik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmKHBvbGVbal1baV09PSdzJylcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2NlbmUgPSBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBTcGF3bj1jYy5pbnN0YW50aWF0ZSh0aGlzLnNwYXduKTtcclxuICAgICAgICAgICAgICAgICAgICBTcGF3bi5wYXJlbnQgPSBzY2VuZTtcclxuICAgICAgICAgICAgICAgICAgICBTcGF3bi5zZXRQb3NpdGlvbig0NSs3NSppLCA3MjAtNzUqaik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICBcclxuICAgIH0sXHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcblxyXG4gICAgXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scripts/Destroy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6bb17CTL41DcIPV17TFLhyM', 'Destroy');
// Scripts/Destroy.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  onBeginContact: function onBeginContact(contact, selfCollider, otherCollider) {
    otherCollider.node.destroy();
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0c1xcRGVzdHJveS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIm9uQmVnaW5Db250YWN0IiwiY29udGFjdCIsInNlbGZDb2xsaWRlciIsIm90aGVyQ29sbGlkZXIiLCJub2RlIiwiZGVzdHJveSIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQU1MO0FBRUE7QUFFQUMsRUFBQUEsY0FBYyxFQUFFLHdCQUFVQyxPQUFWLEVBQW1CQyxZQUFuQixFQUFpQ0MsYUFBakMsRUFBZ0Q7QUFDNURBLElBQUFBLGFBQWEsQ0FBQ0MsSUFBZCxDQUFtQkMsT0FBbkI7QUFDSCxHQVpJO0FBY0xDLEVBQUFBLEtBZEssbUJBY0ksQ0FFUixDQWhCSSxDQWtCTDs7QUFsQkssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgLy8gb25Mb2FkICgpIHt9LFxyXG5cclxuICAgIG9uQmVnaW5Db250YWN0OiBmdW5jdGlvbiAoY29udGFjdCwgc2VsZkNvbGxpZGVyLCBvdGhlckNvbGxpZGVyKSB7XHJcbiAgICAgICAgb3RoZXJDb2xsaWRlci5ub2RlLmRlc3Ryb3koKTtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG5cclxuICAgIH0sXHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------
